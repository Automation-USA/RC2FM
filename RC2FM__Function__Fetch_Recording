#Name: RC2FM__Function__Fetch_Recording History: Created by Automation USA - Julio Toledo Created: 7-3-2016 Last Modified: 6-1-2017 (added commenting, error handling/reporting) Purpose: Gets a specific call recording attachment as Base64 by calling RC2FM's "get_call_attachments.php" endpoint with all required authentication and search criteria parameters. Parameters: message_id = RingCentral's call recording id (contents of field "RC2FM_LOGS::recordingid") $$extension = RingCentral user id (obtained from "RC2FM_Login" during session initiation) $$account = RingCentral account id (obtained from "RC2FM_Login" during session initiation) $$rc2fm_session_id = environment parameters (obtained from "RC2FM_Subscript_Build_Session_ID") RingCentral account credentials (except password): auth = contents of field "RC2FM_GLOBALS::RC_User_Name" extension = RC2FM_GLOBALS::RC_User_ExtNumber (optional) Important Notes: Requires current context to be "RC2FM_LOGS" for access to fields "RC2FM_LOGS::recordingid" and "RC2FM_LOGS::recordingurl" Requires a relationship path from the current context back to the RingCentral credentials fields
#Test for live token
Perform Script [ “RC2FM__Check_Session_Status” ]
Set Variable [ $tokenStatus; Value:Get ( ScriptResult ) ]

#Process token test response
If [ $tokenStatus = 0 and not IsEmpty ( RC2FM_GLOBALS::RC_User_Name ) & not IsEmpty ( RC2FM_GLOBALS::RC_User_Password ) ]
	Perform Script [ “RC2FM__Login” ]
	If [ IsEmpty ( $$extension ) ]
		Exit Script [ Result: "No active session and no user credentials" ]
	End If
Else If [ $tokenStatus = 0 and IsEmpty ( RC2FM_GLOBALS::RC_User_Name ) or IsEmpty ( RC2FM_GLOBALS::RC_User_Password ) ]
	Exit Script [ Result: "No active session and no user credentials" ]
End If

#Proceed with Fetching Recording

#Test for modern FileMaker version
Perform Script [ “Subscript__Validate_Client_Version_≥16” ]
Set Variable [ $isModern; Value:Get ( ScriptResult ) ]

If [ $isModern ]
	#Fetch Base64 file
	Set Variable [ $url; Value:RC2FM_SETTINGS::RC2FM_BaseURL & "/get_call_attachments.php" ]
	Set Variable [ $curl; Value:"-d auth=" & Base64Encode ( RC2FM_GLOBALS::RC_User_Name ) & If ( not IsEmpty ( RC2FM_GLOBALS::RC_User_ExtNumber ) ; "&extension=" & Base64Encode ( RC2FM_GLOBALS::RC_User_ExtNumber ) ; "" ) & "&user_id=" & Base64Encode ( $$extension ) & "&account_id=" & Base64Encode ( $$account ) & $$rc2fm_session_id & "&attachment_id=" & Base64Encode ( RC2FM_LOGS::recordingid ) ]
	#Remove line breaks
	Perform Script [ “Subscript__Remove_LineBreaks ( param )”; Parameter: $curl ]
	Set Variable [ $curl; Value:Get ( ScriptResult ) ]
	Set Error Capture [ On ]
	Insert from URL [ RC2FM_LOGS::recordingurl; $url; cURL options: $curl ] [ Select; No dialog; Verify SSL Certificates ]
	If [ Get ( LastError ) ≠ 0 ]
		Exit Script [ ]
	End If
Else
	#Fetch Base64 file
	Set Variable [ $url; Value:RC2FM_SETTINGS::RC2FM_BaseURL & "/get_call_attachments.php?auth=" & Base64Encode ( RC2FM_GLOBALS::RC_User_Name ) & If ( not IsEmpty ( RC2FM_GLOBALS::RC_User_ExtNumber ) ; "&extension=" & Base64Encode ( RC2FM_GLOBALS::RC_User_ExtNumber ) ; "" ) & "&user_id=" & Base64Encode ( $$extension ) & "&account_id=" & Base64Encode ( $$account ) & $$rc2fm_session_id & "&attachment_id=" & Base64Encode ( RC2FM_LOGS::recordingid ) ]
	Set Error Capture [ On ]
	Insert from URL [ RC2FM_LOGS::recordingurl; $url ] [ Select; No dialog; Verify SSL Certificates ]
	If [ Get ( LastError ) ≠ 0 ]
		Exit Script [ ]
	End If
End If

#trim spaces
Set Field [ RC2FM_LOGS::recordingurl; TrimAll ( RC2FM_LOGS::recordingurl ; 1 ; 3 ) ]

#Test if scripts can be executed on Server ( PSoS )
Perform Script [ “Subscript__Validate_Server_Version_≥13” ]
Set Variable [ $Hosted_On_Server; Value:Get ( ScriptResult ) ]

If [ not IsEmpty ( RC2FM_LOGS::recordingurl ) and IsEmpty ( RC2FM_ATTACHMENTS::rawBase64 ) ]

	#capture Base64 path
	Set Variable [ $Base64_URL; Value:GetField ( $$messageLogTo & "recordingurl" ) ]
	#Insert Base64 raw data
	Freeze Window
	Insert from URL [ RC2FM_ATTACHMENTS::rawBase64; $Base64_URL ] [ Select; No dialog; Verify SSL Certificates ]
	Go to Field [ ] [ Select/perform ]
	#check for download error
	If [ PatternCount ( RC2FM_ATTACHMENTS::rawBase64 ; "404 Not Found" ) or PatternCount ( RC2FM_ATTACHMENTS::rawBase64 ; "was not found on this server" ) ]
		Set Field By Name [ RC2FM_ATTACHMENTS::rawBase64; "" ]
		Set Variable [ $error; Value:404 ]
		Perform Script [ “RC2FM__Fail [Internal] ( param )”; Parameter: "The requested URL was not found on this server. Try downloading again." ]
		Exit Script [ Result: 404 ]
	End If

	If [ $Hosted_On_Server = 1 and LeftWords ( Get ( ApplicationVersion ) ; 1 ) ≠ "Server" //not PlatformServer ]
		Perform Script on Server [ “RC2FM__Operation__Decode_Binary ( param )”; Parameter: RC2FM_LOGS::_kpn_log_id ]
	Else
		#Execute record creation loop script locally if not possible on server
		Perform Script [ “RC2FM__Operation__Decode_Binary ( param )”; Parameter: RC2FM_LOGS::_kpn_log_id ]
	End If

End If

