#Name: RC2FM__Operation__Create_MessageLog_Records ( param ) History: Created by Automation USA - Julio Toledo Created: 7-3-2016 Last Modified: 6-1-2017 - corrected parsing loginc to account for possible presence of "=" in data payload (i.e. in an sms message for a url such as "dropbox.com...dl=0") - added data parsing logic for MMS attachment metadata - added commenting - added error handling/reporting - renamed script from "...__Create_MessagLog_..." to "...__Create_MessageLog_..." Purpose: Parses parameter passed by parent script "RC2FM__Operation__Parse_MessageLog" into field names and field values and inserts data as new records Parameters: None Important Notes: None
#Test for script parameter
If [ IsEmpty ( Get ( ScriptParameter ) ) ]
	Exit Script [ Result: 958 ]
End If
Set Variable [ $splitResponse; Value:Get ( ScriptParameter ) ]
If [ LeftWords ( Get ( ApplicationVersion ) ; 1 ) = "Server" //PlatformServer ]
	Set Variable [ $$extension; Value:LeftValues ( Get ( ScriptParameter ) ; 1 ) ]
End If
If [ LeftWords ( Get ( ApplicationVersion ) ; 1 ) ≠ "Server" //not PlatformServer ]
	Freeze Window
End If
Go to Layout [ $$messageLogLayout ]
Set Variable [ $responseCount; Value:ValueCount ( $splitResponse ) ]
Set Variable [ $LoopCounter; Value:1 ]
Loop
	Set Variable [ $a_response; Value:GetValue ( $splitResponse ; $LoopCounter ) ]
	Set Variable [ $positionTest; Value:Position ( $a_response ; "id=" ; 1 ; 1 ) ]
	Set Variable [ $trimmedResponse; Value:Middle ( $a_response ; $positionTest ; Length ( $a_response ) ) ]
	If [ PatternCount ( $trimmedResponse ; "&mmscount=" ) ]
	Set Variable [ $parsed_trimmedResponse; Value:Substitute ( $trimmedResponse ; [ "&action=" ; "¶action=" ] ; [ "&attachmentmessageStatus=" ; "¶attachmentmessageStatus=" ] ; [ "&attachmentvmDuration=" ; "¶attachmentvmDuration=" ] ; [ "&contentType=" ; "¶ContentType=" ] ; [ "&conversationId=" ; "¶conversationId=" ] ; [ "&conversation=" ; "¶conversation=" ] ; [ "&coverIndex=" ; "¶coverIndex=" ] ; [ "&coverPageText=" ; "¶coverPageText=" ] ; [ "&creationTime=" ; "¶creationTime=" ] ; [ "&direction=" ; "¶direction=" ] ; [ "&duration=" ; "¶duration=" ] ; [ "&faxPageCount=" ; "¶faxPageCount=" ] ; [ "&faxResolution=" ; "¶faxResolution=" ] ; [ "&fromname=" ; "¶fromname=" ] ; [ "&fromlocation=" ; "¶fromlocation=" ] ; [ "&fromphoneNumber=" ; "¶fromphoneNumber=" ] ; [ "&id=" ; "¶id=" ] ; [ "&lastModifiedTime=" ; "¶lastModifiedTime=" ] ; [ "&messageStatus=" ; "¶messageStatus=" ] ; [ "&priority=" ; "¶priority=" ] ; [ "&readStatus=" ; "¶readStatus=" ] ; [ "&recordingid=" ; "¶recordingid=" ] ; [ "&recordingtype=" ; "¶recordingtype=" ] ; [ "&recordingurl=" ; "¶recordingurl=" ] ; [ "&result=" ; "¶result=" ] ; [ "&sessionId=" ; "¶sessionId=" ] ; [ "&startTime=" ; "¶startTime=" ] ; [ "&subject=" ; "¶subject=" ] ; [ "&tolocation=" ; "¶tolocation=" ] ; [ "&toname=" ; "¶toname=" ] ; [ "&toextensionNumber=" ; "¶toExtensionNumber=" ] ; [ "&fromextensionNumber=" ; "¶fromExtensionNumber=" ] ; [ "&tophoneNumber=" ; "¶tophoneNumber=" ] ; [ "&type=" ; "¶type=" ] ; [ "&messageType=" ; "¶messageType=" ] ; [ "&mmscount=" ; "¶mmscount=" ] ) ]
	Else
	Set Variable [ $parsed_trimmedResponse; Value:Substitute ( $trimmedResponse ; [ "&action=" ; "¶action=" ] ; [ "&attachmentmessageStatus=" ; "¶attachmentmessageStatus=" ] ; [ "&attachment_id=" ; "¶attachment_id=" ] ; [ "&attachmenturl=" ; "¶attachmenturl=" ] ; [ "&attachmentvmDuration=" ; "¶attachmentvmDuration=" ] ; [ "&contentType=" ; "¶ContentType=" ] ; [ "&conversationId=" ; "¶conversationId=" ] ; [ "&conversation=" ; "¶conversation=" ] ; [ "&coverIndex=" ; "¶coverIndex=" ] ; [ "&coverPageText=" ; "¶coverPageText=" ] ; [ "&creationTime=" ; "¶creationTime=" ] ; [ "&direction=" ; "¶direction=" ] ; [ "&duration=" ; "¶duration=" ] ; [ "&faxPageCount=" ; "¶faxPageCount=" ] ; [ "&faxResolution=" ; "¶faxResolution=" ] ; [ "&fromname=" ; "¶fromname=" ] ; [ "&fromlocation=" ; "¶fromlocation=" ] ; [ "&fromphoneNumber=" ; "¶fromphoneNumber=" ] ; [ "&id=" ; "¶id=" ] ; [ "&lastModifiedTime=" ; "¶lastModifiedTime=" ] ; [ "&messageStatus=" ; "¶messageStatus=" ] ; [ "&priority=" ; "¶priority=" ] ; [ "&readStatus=" ; "¶readStatus=" ] ; [ "&recordingid=" ; "¶recordingid=" ] ; [ "&recordingtype=" ; "¶recordingtype=" ] ; [ "&recordingurl=" ; "¶recordingurl=" ] ; [ "&result=" ; "¶result=" ] ; [ "&sessionId=" ; "¶sessionId=" ] ; [ "&startTime=" ; "¶startTime=" ] ; [ "&subject=" ; "¶subject=" ] ; [ "&tolocation=" ; "¶tolocation=" ] ; [ "&toname=" ; "¶toname=" ] ; [ "&toextensionNumber=" ; "¶toExtensionNumber=" ] ; [ "&fromextensionNumber=" ; "¶fromExtensionNumber=" ] ; [ "&tophoneNumber=" ; "¶tophoneNumber=" ] ; [ "&type=" ; "¶type=" ] ; [ "&messageType=" ; "¶messageType=" ] ; [ "&mmscount=" ; "¶mmscount=" ] ) ]
	End If
	Set Variable [ $responseValueCount; Value:ValueCount ( $parsed_trimmedResponse ) ]
	Set Variable [ $subLoop_Counter; Value:1 ]
	#begin record creation
	New Record/Request
	Loop
		Set Variable [ $a_value; Value:GetValue ( $parsed_trimmedResponse ; $subLoop_Counter ) ]
		Set Variable [ $dataContent; Value:Replace ( $a_value; Position ( $a_value ; "=" ; 1 ; 1 ) ; 1 ; ¶ ) ]
		If [ ValueCount ( $dataContent ) < 2 ]
			Set Variable [ $subLoop_Counter; Value:$subLoop_Counter + 1 ]
		Else If [ $a_value = "¶" or $a_avalue = " ¶" or $a_value = " " or IsEmpty ( $a_value ) ]
			Set Variable [ $subLoop_Counter; Value:$subLoop_Counter + 1 ]
		Else
			#if message type is MMS, create mms attachment records
			If [ PatternCount ( $a_value ; "mmscount" ) ]
				Set Variable [ $mmsMetaData; Value:LeftValues ( Substitute ( $a_value ; "=|=" ; ¶ ) ; 1 ) ]
				Set Variable [ $mmsDataContent; Value:Replace ( $mmsMetaData ; Position ( $mmsMetaData ; "=" ; 1 ; 1 ) ; 1 ; ¶ ) ]
				Set Variable [ $fieldName; Value:LeftValues ( $mmsDataContent ; 1 ) ]
				Set Variable [ $fieldValue; Value:RightValues ( $mmsDataContent ; ValueCount ( $mmsDataContent - 1 ) ) ]
				Set Variable [ $fieldName; Value:$$messageLogTO & Substitute ( $fieldName ; ¶ ; "" ) ]
				If [ not IsEmpty ( $fieldValue ) ]
					Set Field By Name [ $fieldName; Left ( $fieldValue ; Length ( $fieldValue ) - 1 ) ]
				End If
				Set Variable [ $mmsArray; Value:Let ( [ parsedArray = Substitute ( $a_value ; "=|=" ; ¶ ) ; Count = ValueCount ( ParsedArray ) ] ; //calculation RightValues ( parsedArray ; Count -1 ) ) ]
				Perform Script [ “RC2FM__Operation__Create_MessageAttachment_Records ( param )”; Parameter: $mmsArray ]
			Else
				Set Variable [ $fieldName; Value:LeftValues ( $dataContent ; 1 ) ]
				Set Variable [ $fieldValue; Value:RightValues ( $dataContent ; ValueCount ( $dataContent - 1 ) ) ]
				Set Variable [ $fieldName; Value:$$messageLogTO & Substitute ( $fieldName ; ¶ ; "" ) ]
				If [ not IsEmpty ( $fieldValue ) ]
					Set Field By Name [ $fieldName; Left ( $fieldValue ; Length ( $fieldValue ) - 1 ) ]
				End If
			End If
			#populate call recording 'ContentType' field (data not provided in download)
			If [ not IsEmpty ( GetField ( $$messageLogTO & "recordingid" ) ) ]
				Set Field By Name [ $$messageLogTO & "ContentType"; "audio/mpeg" ]
				Set Field By Name [ $$messageLogTO & "creationTime"; GetField ( $$messageLogTO & "startTime" ) ]
			End If
			Set Variable [ $subLoop_Counter; Value:$subLoop_Counter + 1 ]
		End If
		Exit Loop If [ $subLoop_Counter > $responseValueCount ]
	End Loop
	#delete empty record
	If [ IsEmpty ( GetField ( $$messageLogTO & "creationTime" ) ) and IsEmpty ( GetField ( $$messageLogTO & "id" ) ) ]
		Delete Record/Request [ No dialog ]
	End If
	Set Variable [ $LoopCounter; Value:$LoopCounter + 1 ]
	Exit Loop If [ $LoopCounter > $responseCount ]
End Loop
If [ not LeftWords ( Get ( ApplicationVersion ) ; 1 ) ≠ "Server" //not PlatformServer ]
	Go to Layout [ original layout ]
End If
